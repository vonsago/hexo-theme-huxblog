{"expireTime":9007200842122885000,"key":"gatsby-plugin-mdx-entire-payload-f12f770391ca4b536064560d15e45a40-","val":{"mdast":{"type":"root","children":[{"type":"import","value":"import DefaultLayout from \"/Users/vassagovon/myProject/venv3/Github/BLOG/node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js\"","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":150,"offset":151},"indent":[]}},{"type":"export","default":true,"value":"export default DefaultLayout","position":{"start":{"line":5,"column":1,"offset":153},"end":{"line":5,"column":29,"offset":181},"indent":[]}},{"type":"import","value":"import { format } from 'date-fns'","position":{"start":{"line":8,"column":1,"offset":184},"end":{"line":8,"column":34,"offset":217},"indent":[]}},{"type":"heading","depth":1,"children":[{"type":"text","value":"posts","position":{"start":{"line":10,"column":3,"offset":221},"end":{"line":10,"column":8,"offset":226},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":219},"end":{"line":10,"column":8,"offset":226},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"You can use the ","position":{"start":{"line":12,"column":1,"offset":228},"end":{"line":12,"column":17,"offset":244},"indent":[]}},{"type":"inlineCode","value":"<SourceList filter=\"posts\" />","position":{"start":{"line":12,"column":17,"offset":244},"end":{"line":12,"column":48,"offset":275},"indent":[]}},{"type":"text","value":" component from any ","position":{"start":{"line":12,"column":48,"offset":275},"end":{"line":12,"column":68,"offset":295},"indent":[]}},{"type":"inlineCode","value":".mdx","position":{"start":{"line":12,"column":68,"offset":295},"end":{"line":12,"column":74,"offset":301},"indent":[]}},{"type":"text","value":". ","position":{"start":{"line":12,"column":74,"offset":301},"end":{"line":12,"column":76,"offset":303},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":228},"end":{"line":12,"column":76,"offset":303},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Here we use it to return all the ","position":{"start":{"line":14,"column":1,"offset":305},"end":{"line":14,"column":34,"offset":338},"indent":[]}},{"type":"inlineCode","value":"posts","position":{"start":{"line":14,"column":34,"offset":338},"end":{"line":14,"column":41,"offset":345},"indent":[]}},{"type":"text","value":" by using the filter prop","position":{"start":{"line":14,"column":41,"offset":345},"end":{"line":14,"column":66,"offset":370},"indent":[]}}],"position":{"start":{"line":14,"column":1,"offset":305},"end":{"line":14,"column":66,"offset":370},"indent":[]}},{"type":"jsx","value":"<SourceList filter=\"posts\">\n  {posts => (\n    <Flex\n      sx={{\n        flexWrap: \"wrap\",\n        ml: theme => `-${theme.space[2]}px`,\n        mr: theme => `-${theme.space[2]}px`,\n      }}\n    >\n      {posts.map((edge, index) => {\n        const {\n          frontmatter: { title, featuredImage, tags, date },\n          excerpt,\n          fields: { slug },\n        } = edge.node\n        return (\n          <Box\n            key={index}\n            sx={{ display: 'flex', flex: '1 1 auto', flexDirection: 'column', mb: 3, maxWidth: [\"100%\", \"100%\", \"50%\", \"50%\"], width: [\"100%\", \"100%\", \"50%\", \"50%\"] }}\n          >\n             <Link href={slug} sx={{ textDecoration: \"none\", display: 'flex', flex: '1 1 auto', flexDirection: 'column', m: theme => `0px ${theme.space[2]}px`, minHeight: '1px' }}>\n    \n               <Card sx={{ display: 'flex', flex: '1 1 auto', flexDirection: 'column', minHeight: '1px' }}>\n                {featuredImage && featuredImage.childImageSharp && (\n                  <Box sx={{ minHeight: '1px'}}>\n                    <Image\n                      src={featuredImage.childImageSharp.fluid.src}\n                      alt={featuredImage.childImageSharp.fluid.originalName}\n                    />\n                  </Box>\n                )}\n                  <Box sx={{ \n                    display: 'flex', \n                    flex: '1 1 auto', \n                    flexDirection: 'column', \n                    p: 3}}>\n                  <Heading variant=\"styles.h4\" sx={{ color: \"text\" }}>\n                    {title}\n                  </Heading>\n                   <Text sx={{mb: 1, color: 'muted'}}>{format(new Date(date), 'd-MMM-u')}</Text>\n                   <Text sx={{mb: 1, color: 'text'}}>{excerpt}</Text>\n                  </Box>\n                  <Box sx={{p: 3}}>\n                  <Text>View Post</Text>\n                  </Box>\n              </Card>\n   \n            </Link> \n          </Box>\n        )\n      })}\n    </Flex>\n  )}\n</SourceList>","position":{"start":{"line":16,"column":1,"offset":372},"end":{"line":69,"column":14,"offset":2353},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":71,"column":1,"offset":2355},"end":{"line":71,"column":31,"offset":2385},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":71,"column":31,"offset":2385}}},"scopeImports":[],"scopeIdentifiers":[],"rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\nimport DefaultLayout from \"/Users/vassagovon/myProject/venv3/Github/BLOG/node_modules/@pauliescanlon/gatsby-theme-terminal/src/layouts/PageLayout.js\"\nimport { format } from 'date-fns'\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\nconst SourceList = makeShortcode(\"SourceList\");\nconst Flex = makeShortcode(\"Flex\");\nconst Box = makeShortcode(\"Box\");\nconst Link = makeShortcode(\"Link\");\nconst Card = makeShortcode(\"Card\");\nconst Image = makeShortcode(\"Image\");\nconst Heading = makeShortcode(\"Heading\");\nconst Text = makeShortcode(\"Text\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1>{`posts`}</h1>\n    <p>{`You can use the `}<inlineCode parentName=\"p\">{`<SourceList filter=\"posts\" />`}</inlineCode>{` component from any `}<inlineCode parentName=\"p\">{`.mdx`}</inlineCode>{`. `}</p>\n    <p>{`Here we use it to return all the `}<inlineCode parentName=\"p\">{`posts`}</inlineCode>{` by using the filter prop`}</p>\n    <SourceList filter=\"posts\" mdxType=\"SourceList\">\n  {posts => <Flex sx={{\n        flexWrap: \"wrap\",\n        ml: theme => `-${theme.space[2]}px`,\n        mr: theme => `-${theme.space[2]}px`\n      }} mdxType=\"Flex\">\n      {posts.map((edge, index) => {\n          const {\n            frontmatter: {\n              title,\n              featuredImage,\n              tags,\n              date\n            },\n            excerpt,\n            fields: {\n              slug\n            }\n          } = edge.node;\n          return <Box key={index} sx={{\n            display: 'flex',\n            flex: '1 1 auto',\n            flexDirection: 'column',\n            mb: 3,\n            maxWidth: [\"100%\", \"100%\", \"50%\", \"50%\"],\n            width: [\"100%\", \"100%\", \"50%\", \"50%\"]\n          }} mdxType=\"Box\">\n             <Link href={slug} sx={{\n              textDecoration: \"none\",\n              display: 'flex',\n              flex: '1 1 auto',\n              flexDirection: 'column',\n              m: theme => `0px ${theme.space[2]}px`,\n              minHeight: '1px'\n            }} mdxType=\"Link\">\n    \n               <Card sx={{\n                display: 'flex',\n                flex: '1 1 auto',\n                flexDirection: 'column',\n                minHeight: '1px'\n              }} mdxType=\"Card\">\n                {featuredImage && featuredImage.childImageSharp && <Box sx={{\n                  minHeight: '1px'\n                }} mdxType=\"Box\">\n                    <Image src={featuredImage.childImageSharp.fluid.src} alt={featuredImage.childImageSharp.fluid.originalName} mdxType=\"Image\" />\n                  </Box>}\n                  <Box sx={{\n                  display: 'flex',\n                  flex: '1 1 auto',\n                  flexDirection: 'column',\n                  p: 3\n                }} mdxType=\"Box\">\n                  <Heading variant=\"styles.h4\" sx={{\n                    color: \"text\"\n                  }} mdxType=\"Heading\">\n                    {title}\n                  </Heading>\n                   <Text sx={{\n                    mb: 1,\n                    color: 'muted'\n                  }} mdxType=\"Text\">{format(new Date(date), 'd-MMM-u')}</Text>\n                   <Text sx={{\n                    mb: 1,\n                    color: 'text'\n                  }} mdxType=\"Text\">{excerpt}</Text>\n                  </Box>\n                  <Box sx={{\n                  p: 3\n                }} mdxType=\"Box\">\n                  <Text mdxType=\"Text\">View Post</Text>\n                  </Box>\n              </Card>\n   \n            </Link> \n          </Box>;\n        })}\n    </Flex>}\n    </SourceList>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}